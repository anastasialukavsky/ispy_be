/*
 * This file is generated by jOOQ.
 */
package com.ispy.spy.jooq.keys


import com.ispy.spy.jooq.tables.ElaResults
import com.ispy.spy.jooq.tables.Images
import com.ispy.spy.jooq.tables.NoiseAnalysisResults
import com.ispy.spy.jooq.tables.Users
import com.ispy.spy.jooq.tables.records.ElaResultsRecord
import com.ispy.spy.jooq.tables.records.ImagesRecord
import com.ispy.spy.jooq.tables.records.NoiseAnalysisResultsRecord
import com.ispy.spy.jooq.tables.records.UsersRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val ELA_RESULTS_PKEY: UniqueKey<ElaResultsRecord> = Internal.createUniqueKey(ElaResults.ELA_RESULTS, DSL.name("ela_results_pkey"), arrayOf(ElaResults.ELA_RESULTS.ID), true)
val IMAGES_PKEY: UniqueKey<ImagesRecord> = Internal.createUniqueKey(Images.IMAGES, DSL.name("images_pkey"), arrayOf(Images.IMAGES.IMAGE_ID), true)
val NOISE_ANALYSIS_RESULTS_PKEY: UniqueKey<NoiseAnalysisResultsRecord> = Internal.createUniqueKey(NoiseAnalysisResults.NOISE_ANALYSIS_RESULTS, DSL.name("noise_analysis_results_pkey"), arrayOf(NoiseAnalysisResults.NOISE_ANALYSIS_RESULTS.ID), true)
val USERS_EMAIL_KEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), arrayOf(Users.USERS.EMAIL), true)
val USERS_PKEY: UniqueKey<UsersRecord> = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), arrayOf(Users.USERS.USER_ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val ELA_RESULTS__FK_IMAGE: ForeignKey<ElaResultsRecord, ImagesRecord> = Internal.createForeignKey(ElaResults.ELA_RESULTS, DSL.name("fk_image"), arrayOf(ElaResults.ELA_RESULTS.IMAGE_ID), com.ispy.spy.jooq.keys.IMAGES_PKEY, arrayOf(Images.IMAGES.IMAGE_ID), true)
val IMAGES__FK_USER: ForeignKey<ImagesRecord, UsersRecord> = Internal.createForeignKey(Images.IMAGES, DSL.name("fk_user"), arrayOf(Images.IMAGES.USER_ID), com.ispy.spy.jooq.keys.USERS_PKEY, arrayOf(Users.USERS.USER_ID), true)
val NOISE_ANALYSIS_RESULTS__FK_IMAGE: ForeignKey<NoiseAnalysisResultsRecord, ImagesRecord> = Internal.createForeignKey(NoiseAnalysisResults.NOISE_ANALYSIS_RESULTS, DSL.name("fk_image"), arrayOf(NoiseAnalysisResults.NOISE_ANALYSIS_RESULTS.IMAGE_ID), com.ispy.spy.jooq.keys.IMAGES_PKEY, arrayOf(Images.IMAGES.IMAGE_ID), true)
