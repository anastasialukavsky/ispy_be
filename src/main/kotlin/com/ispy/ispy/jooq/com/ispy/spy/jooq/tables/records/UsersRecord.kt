/*
 * This file is generated by jOOQ.
 */
package com.ispy.spy.jooq.tables.records


import com.ispy.ispy.jooq.com.ispy.spy.jooq.enums.UserRole
import com.ispy.spy.jooq.tables.Users

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var userId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var email: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var passwordHash: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var oauthProvider: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var oauthId: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var role: UserRole?
        set(value): Unit = set(5, value)
        get(): UserRole? = get(5) as UserRole?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(userId: UUID? = null, email: String? = null, passwordHash: String? = null, oauthProvider: String? = null, oauthId: String? = null, role: UserRole? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.userId = userId
        this.email = email
        this.passwordHash = passwordHash
        this.oauthProvider = oauthProvider
        this.oauthId = oauthId
        this.role = role
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
