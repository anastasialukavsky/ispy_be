/*
 * This file is generated by jOOQ.
 */
package com.ispy.ispy.jooq.tables.records


import com.ispy.ispy.jooq.tables.Images

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ImagesRecord() : UpdatableRecordImpl<ImagesRecord>(Images.IMAGES) {

    open var imageId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var userId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var filePath: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var uploadedAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised ImagesRecord
     */
    constructor(imageId: Int? = null, userId: UUID? = null, filePath: String? = null, uploadedAt: LocalDateTime? = null): this() {
        this.imageId = imageId
        this.userId = userId
        this.filePath = filePath
        this.uploadedAt = uploadedAt
        resetChangedOnNotNull()
    }
}
